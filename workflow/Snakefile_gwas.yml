from snakemake.remote.HTTP import RemoteProvider as HTTPRemoteProvider
HTTP = HTTPRemoteProvider()

import math
import os
import pandas

###############################################################################
# General config
public_data_dir_path = config['public_data_dir'] # db path
process_data_dir_path = config['process_data_dir'] # singularity image

###############################################################################
# GWAS config
gwas_pval=str(config["gwas_pval"]) # gwas p-value, eg. 5e-8
gwas_ods_path = config["gwas_ods"] # path to the gwas ods list
gwas_df = pandas.read_excel(gwas_ods_path, header=0)
gwas_df['trait'] = gwas_df['trait'].str.replace("'", "")
gwas_identifier_lst = gwas_df['id'].tolist()
gwas_traitname_lst = gwas_df['trait'].tolist()
gwas_dic = dict(zip(gwas_identifier_lst, gwas_traitname_lst))

rule all:
    input:
        expand(os.path.join(process_data_dir_path, "hg38/gwas.mrcieu.ac.uk/files/{gwas_id}/{gwas_id}.vcf.bgz.tbi"), gwas_id=gwas_identifier_lst),

rule gwas_hg38_tbi:
    input:
        vcf_bgz=os.path.join(process_data_dir_path, "hg38/gwas.mrcieu.ac.uk/files/{gwas_id}/{gwas_id}.vcf.bgz"),
    output:
        tbi=os.path.join(process_data_dir_path, "hg38/gwas.mrcieu.ac.uk/files/{gwas_id}/{gwas_id}.vcf.bgz.tbi"),
    shell:
        "tabix -p vcf {input.vcf_bgz}"

rule gwas_liftover_hg38:
    input:
        jar=os.path.join(public_data_dir_path, "github.com/broadinstitute/picard/releases/download/2.27.4/picard.jar"),
        vcf_gz=os.path.join(public_data_dir_path, "gwas.mrcieu.ac.uk/files/{gwas_id}/{gwas_id}.vcf.gz"),
        chain_gz=os.path.join(public_data_dir_path, "ftp.ensembl.org/pub/assembly_mapping/homo_sapiens/GRCh37_to_GRCh38.chain.gz"),
        fa_gz=os.path.join(public_data_dir_path, "ftp.ensembl.org/pub/release-95/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.primary_assembly.fa.gz"),
        dict=os.path.join(public_data_dir_path, "ftp.ensembl.org/pub/release-95/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.primary_assembly.dict"),
    output:
        vcf_bgz=os.path.join(process_data_dir_path, "hg38/gwas.mrcieu.ac.uk/files/{gwas_id}/{gwas_id}.vcf.bgz"),
        reject_vcf_bgz=os.path.join(process_data_dir_path, "hg38/gwas.mrcieu.ac.uk/files/{gwas_id}/{gwas_id}_reject.vcf.bgz"),
    resources:
        mem_mb= 20000
    log:
        os.path.join("out/logs", "hg38/gwas.mrcieu.ac.uk/files/{gwas_id}/{gwas_id}.vcf.bgz.log"),
    shell:
        "java -jar {input.jar} LiftoverVcf --VERBOSITY ERROR --QUIET -I {input.vcf_gz} -O {output.vcf_bgz}  -CHAIN {input.chain_gz} -R {input.fa_gz} -REJECT {output.reject_vcf_bgz}"

rule picard_ref_dict:
    input:
        jar=os.path.join(public_data_dir_path, "github.com/broadinstitute/picard/releases/download/2.27.4/picard.jar"),
        fa_gz=os.path.join(public_data_dir_path, "ftp.ensembl.org/pub/release-95/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.primary_assembly.fa.gz"),
    output:
        dict=os.path.join(public_data_dir_path, "ftp.ensembl.org/pub/release-95/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.primary_assembly.dict"),
    shell:
        "java -jar {input.jar} CreateSequenceDictionary -R {input.fa_gz} -O {output.dict}"

rule wget_vcf:
    output:
        vcf_gz=os.path.join(public_data_dir_path, "gwas.mrcieu.ac.uk/files/{gwas_id}/{gwas_id}.vcf.gz"),
    params:
        url="gwas.mrcieu.ac.uk/files/{gwas_id}/{gwas_id}.vcf.gz",
        public_data_dir_path=public_data_dir_path,
    shell:
        """wget -nc -q -r {params.url} -P {params.public_data_dir_path}"""

rule wget_chain:
    output:
        chain_gz=os.path.join(public_data_dir_path, "ftp.ensembl.org/pub/assembly_mapping/homo_sapiens/GRCh37_to_GRCh38.chain.gz"),
    params:
        url="ftp.ensembl.org/pub/assembly_mapping/homo_sapiens/GRCh37_to_GRCh38.chain.gz",
        public_data_dir_path=public_data_dir_path,
    shell:
        """wget -nc -q -r {params.url} -P {params.public_data_dir_path}"""

rule wget_ref_fasta:
    output:
        fa_gz=os.path.join(public_data_dir_path, "ftp.ensembl.org/pub/release-95/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.primary_assembly.fa.gz"),
    params:
        url="ftp.ensembl.org/pub/release-95/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna_sm.primary_assembly.fa.gz",
        public_data_dir_path=public_data_dir_path,
    shell:
        """wget -nc -q -r {params.url} -P {params.public_data_dir_path}"""

rule wget_picard_jar:
    output:
        jar=os.path.join(public_data_dir_path, "github.com/broadinstitute/picard/releases/download/2.27.4/picard.jar"),
    params:
        url="github.com/broadinstitute/picard/releases/download/2.27.4/picard.jar",
        public_data_dir_path=public_data_dir_path,
    shell:
        """wget -nc -q -r {params.url} -P {params.public_data_dir_path}"""
