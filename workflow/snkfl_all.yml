from snakemake.remote.HTTP import RemoteProvider as HTTPRemoteProvider
HTTP = HTTPRemoteProvider()

import os
import pandas

###############################################################################
# General config
public_data_dir_path = config['public_data_dir'] # db path
process_data_dir_path = config['process_data_dir'] # singularity image
#region = config['region'] # singularity image
window = str(config['window']) # singularity image
outdir = config['outdir']

if "image_sif" in config:
    image_sif = config['image_sif'] # singularity image
    container: image_sif

###############################################################################
# eQTL config
if "eqtl_tsv" in config:
    eqtl_tsv_path = config["eqtl_tsv"] # path to the eqtl< ods list
else:
    from gwas2eqtl.URL import URL
    url = 'https://raw.githubusercontent.com/eQTL-Catalogue/eQTL-Catalogue-resources/master/tabix/tabix_ftp_paths.tsv'
    eqtl_tsv_path = URL(url=url).download()
    config["eqtl_tsv"] = eqtl_tsv_path
eqtl_df = pandas.read_csv(eqtl_tsv_path, sep="\t")
# keep urls containing "ge" or "microarray"
eqtl_df = eqtl_df.loc[eqtl_df['ftp_path'].str.contains('/ge/|/microarray/',regex=True,na=False), ]
eqtl_id_lst = (eqtl_df['ftp_path'].str.replace('.all.tsv.gz', '', regex=True)).str.split('/', expand=True)[10].tolist()
eqtl_df.index = eqtl_id_lst

###############################################################################
# GWAS config
#gwas_pval=str(config["gwas_pval"]) # gwas p-value, eg. 5e-8
gwas_ods_path = config["gwas_ods"] # path to the gwas ods list
gwas_df = pandas.read_excel(gwas_ods_path, header=0)
#gwas_df['trait'] = gwas_df['trait'].str.replace("'", "")
gwas_id_lst = gwas_df['id'].tolist()
#gwas_traitname_lst = gwas_df['trait'].tolist()
#gwas_dic = dict(zip(gwas_id_lst, gwas_traitname_lst))

###############################################################################
# Tophits config (https://rdrr.io/github/MRCIEU/ieugwasr/man/tophits.html)
pval = str(config["pval"])  # use this p-value threshold
r2 = str(config["r2"])  # use this clumping r2 threshold
kb = str(config["kb"])  # use this clumping "kb_" + kb window

"""PYTHONPATH=.:$PYTHONPATH snakemake -j all -s workflow/Snakefile_coloc.yml -p --config gwas_ods=config/gwas_ebi-a-GCST002318.ods eqtl_tsv=config/eqtl_Schmiedel_2018_CD8_T-cell_naive.tsv pval=5e-8 r2=0.1 kb=1000 window=1000000 public_data_dir=/home/gonzalez/Software/public process_data_dir=/home/gonzalez/Software/process outdir=out/gwas420 maf_sqlite=out/eur_af.sqlite tophits_tsv=out/gwas420/tophits_pval_5e-8_r2_0.1_kb_1000.tsv"""

rule all:
    input:
        expand(os.path.join(outdir, "coloc", "{gwas_id}", "pval_" + pval, "r2_" + r2, "kb_" + kb, "window_" + window, "{eqtl_id}.tsv"), eqtl_id=eqtl_id_lst, gwas_id=gwas_id_lst),

include: 'snkfl_coloc.yml'
include: 'snkfl_tophits.yml'
include: 'snkfl_eur_maf.yml'
include: 'snkfl_eqtl.yml'
include: 'snkfl_gwas.yml'
