from snakemake.remote.HTTP import RemoteProvider as HTTPRemoteProvider
HTTP = HTTPRemoteProvider()

import math
import os
import pandas

###############################################################################
# General config
public_data_dir = config['public_data_dir']
process_data_dir = config['process_data_dir']
outdir = config['outdir']

###############################################################################
# GWAS config
gwas_ods_path = config["gwas_ods"] # path to the gwas ods list
gwas_df = pandas.read_excel(gwas_ods_path, header=0)
gwas_df['trait'] = gwas_df['trait'].str.replace("'", "")
gwas_identifier_lst = gwas_df['id'].tolist()
gwas_traitname_lst = gwas_df['trait'].tolist()
gwas_dic = dict(zip(gwas_identifier_lst, gwas_traitname_lst))

###############################################################################
# Tophits config (https://rdrr.io/github/MRCIEU/ieugwasr/man/tophits.html)
pval = str(config["pval"])  # use this p-value threshold
r2 = str(config["r2"])  # use this clumping r2 threshold
kb = str(config["kb"])  # use this clumping "kb_" + kb window

###############################################################################
#PYTHONPATH=.:$PYTHONPATH snakemake -j all -s workflow/Snakefile_tophits.yml -p --config gwas_ods=config/gwas413_ebi-a-GCST002318.ods pval=5e-8 r2=0.1 kb=1000 public_data_dir=/home/gonzalez/Software/public process_data_dir=/home/gonzalez/Software/process image_sif=out/eqt2gwas.sif outdir=out/maf gwas_pval="5e-8" --rerun-incomplete

rule all:
    input:
        expand(os.path.join(outdir, "tophits/{gwas_id}", "pval_" + pval, "r2_" + r2, "kb_" + kb, "hg38.tsv"), gwas_id=gwas_identifier_lst),

rule gwas_tophits_hg38:
    input:
        tophits_hg19_tsv=os.path.join(outdir, "tophits/{gwas_id}", "pval_" + pval, "r2_" + r2, "kb_" + kb, "hg19.tsv"),
        tophits_hg38_bed=os.path.join(outdir, "tophits/{gwas_id}", "pval_" + pval, "r2_" + r2, "kb_" + kb, "hg38.bed"),
    output:
        tophits_hg19_tsv=os.path.join(outdir, "tophits/{gwas_id}", "pval_" + pval, "r2_" + r2, "kb_" + kb, "hg38.tsv"),
    shell:
        "Rscript workflow/scripts2/gwas_tophits_hg38.R {input.tophits_hg19_tsv} {input.tophits_hg38_bed} {output.tophits_hg19_tsv}"

rule gwas_tophits_liftover_hg38:
    input:
        chain_gz=os.path.join(public_data_dir, "ftp.ensembl.org/pub/assembly_mapping/homo_sapiens/GRCh37_to_GRCh38.chain.gz"),
        tophits_hg19_bed=os.path.join(outdir, "tophits/{gwas_id}", "pval_" + pval, "r2_" + r2, "kb_" + kb, "hg19.bed"),
    output:
        tophits_hg38_bed=os.path.join(outdir, "tophits/{gwas_id}", "pval_" + pval, "r2_" + r2, "kb_" + kb, "hg38.bed"),
    shell:
        "CrossMap.py bed {input.chain_gz} {input.tophits_hg19_bed} {output.tophits_hg38_bed}"

rule gwas_tophits_hg19:
    output:
        tophits_hg19_tsv=os.path.join(outdir, "tophits/{gwas_id}", "pval_" + pval, "r2_" + r2, "kb_" + kb, "hg19.tsv"),
        tophits_hg19_bed=os.path.join(outdir, "tophits/{gwas_id}", "pval_" + pval, "r2_" + r2, "kb_" + kb, "hg19.bed"),
    params:
        gwas_id="{gwas_id}",
        pval=pval,
        r2=r2,
        kb=kb,
    shell:
        "Rscript workflow/scripts2/gwasglue_tophits.R {params.gwas_id} {params.pval} {params.r2} {params.kb} {output.tophits_hg19_tsv} {output.tophits_hg19_bed}"
